// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Face_recognitionCompdef_Face_recognition_BODY

/************************************************************
 Face_recognition class body
 ************************************************************/

// include associated header file
#include "Face_recognitionCompdef/Face_recognition.h"

// Derived includes directives
#include "rclcpp/rclcpp.hpp"

// Include from Include declaration (body)
// declare options
rclcpp::NodeOptions face_recognition_options;

void FaceDetectionHandler(const sensor_msgs::msg::Image::SharedPtr /*in*/image);

int main(int argc, char **argv) {
	rclcpp::init(argc, argv);

	auto face_recognition = std::make_shared
			< Face_recognitionCompdef::Face_recognition
			> (face_recognition_options);

	RCLCPP_INFO(face_recognition->get_logger(),
			"Face_recognition has been initialized");

	rclcpp::executors::MultiThreadedExecutor executor;

	executor.add_node(face_recognition->get_node_base_interface());

	executor.spin();
	rclcpp::shutdown();
}

// End of Include declaration (body)

namespace Face_recognitionCompdef {

// static attributes (if any)

/**
 * 
 * @param image 
 */
void Face_recognition::FaceDetectionHandler(const sensor_msgs::msg::Image::SharedPtr /*in*/image) {

}

/**
 * 
 * @param options 
 */
Face_recognition::Face_recognition(rclcpp::NodeOptions /*in*/options) : rclcpp_lifecycle::LifecycleNode("Face_recognition", options) {
	auto Image_qos = rclcpp::QoS(rclcpp::KeepLast(100)).best_effort();
	Image_sub = create_subscription < sensor_msgs::msg::Image> ("Image", Image_qos, [this](const sensor_msgs::msg::Image::SharedPtr image) {
				Face_recognitionCompdef::Face_recognition::FaceDetectionHandler(image);
	});
	// auto Pose_qos = rclcpp::QoS(rclcpp::KeepLast(100)).best_effort();

	Pose_pub = create_publisher < geometry_msgs::msg::Twist> ("Pose", 1/*Pose_qos*/);
	// rclcpp::Rate loop_rate(10);
	// directly activate a publisher
	Pose_pub->on_activate();
}

} // of namespace Face_recognitionCompdef

/************************************************************
 End of Face_recognition class body
 ************************************************************/
